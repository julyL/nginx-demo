worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 512;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen 80;
        # root /demo;
        # server_name  google.com;

        location /{
            proxy_pass http://localhost:3000;   
            # koa启动的服务是3000端口,代理到80后可以直接通过localhost访问
        }

        location ^~ /a/ {
            rewrite '^/a$'  /b;
            rewrite  '^/a/(.*)'  /b/$1;
        }

        location ~ ^/a/ {
            rewrite '^/a$'  /d;
            rewrite  '^/a/(.*)'  /d/$1;
        }

        location  ~ ^/page$ {
          if ($query_string  ~ "id=([^&#=]*)" ) {
             set  $id  $1;  
             rewrite  ^/page$  /page/$id? break;
          }
        }


        # 优先级示例  当能路径能够匹配以下当中的某些规则时,优先级 level1 > level2 > ...  (前提是能匹配, 比如level1的示例就不能匹配 /p/abc)
        
        # 只能完全匹配 /p
        # location = /p {    
        #     rewrite  /   /level/1;
        # }

        #  完全匹配 /p
        # location  /p {
        #     rewrite  /   /level/2;
        # }

        # 只能匹配 /p/开头的路径  eg: /p/abc
        # location ^~ /p/ {
        #     rewrite  /   /level/3;
        # }

        # # 区分大小写的正则匹配
        # location  ~ ^/p(.*)$ {     
        #     rewrite  /   /level/4;
        # }

        # # 不区分大小写的正则匹配
        # location  ~* ^/p(.*)$ {
        #     rewrite  /   /level/4;
        # }

        # 只能匹配 /p/开头的路径 
        # location  /p/ {
        #     rewrite  /   /level/5;
        # }

        # location  / {
        #     rewrite  /   /level/6;
        # }

    }
}
